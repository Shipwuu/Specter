-- Services
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Create GUI
local sanityGui = Instance.new("ScreenGui")
sanityGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- Create God Button
local godButton = Instance.new("TextButton")
godButton.Name = "GodButton"
godButton.Parent = sanityGui
godButton.AnchorPoint = Vector2.new(0, 0.5)
godButton.Position = UDim2.new(1, -439, 0, 104)  -- Positioned to the left of the startButton
godButton.Size = UDim2.new(0, 140, 0, 30)
godButton.Font = Enum.Font.SourceSansBold
godButton.TextSize = 18
godButton.TextColor3 = Color3.fromRGB(255, 255, 255)
godButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)  -- Red color for visibility
godButton.BackgroundTransparency = 0.7
godButton.TextStrokeTransparency = 0
godButton.Text = "God Mode"

-- God Button Functionality
godButton.MouseButton1Click:Connect(function()
    local Cam = workspace.CurrentCamera
    local speaker = Players.LocalPlayer
    local Char = speaker.Character
    if not Char then return end
    local Human = Char:FindFirstChildWhichIsA("Humanoid")
    if not Human then return end
    local nHuman = Human:Clone()

    if nHuman then
        nHuman.Parent = Char
        speaker.Character = nil
        nHuman:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false)
        nHuman:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false)
        nHuman:SetStateEnabled(Enum.HumanoidStateType.GettingUp, false)
        nHuman.BreakJointsOnDeath = false
        Human:Destroy()
        speaker.Character = Char
        Cam.CameraSubject = nHuman
        Cam.CFrame = Cam.CFrame -- Ensure the camera is set correctly
        nHuman.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None

        local Script = Char:FindFirstChild("Animate")
        if Script then
            Script.Disabled = true
            wait()
            Script.Disabled = false
        end

        nHuman.Health = nHuman.MaxHealth
    else
        warn("Failed to clone Humanoid or Humanoid not found!")
    end
end)

-- First of Ghost Room

-- Services
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Create GUI
local sanityGui = Instance.new("ScreenGui")
sanityGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
sanityGui.ResetOnSpawn = false

-- Create God Button
local godButton = Instance.new("TextButton")
godButton.Name = "GodButton"
godButton.Parent = sanityGui
godButton.AnchorPoint = Vector2.new(0, 0.5)
godButton.Position = UDim2.new(1, -439, 0, 150)  -- Positioned to the left of the startButton
godButton.Size = UDim2.new(0, 140, 0, 30)
godButton.Font = Enum.Font.SourceSansBold
godButton.TextSize = 18
godButton.TextColor3 = Color3.fromRGB(255, 255, 255)
godButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)  -- Red color for visibility
godButton.BackgroundTransparency = 0.7
godButton.TextStrokeTransparency = 0
godButton.Text = "Find Room"

-- God Button Functionality
godButton.MouseButton1Click:Connect(function()
     loadstring(game:HttpGet("https://raw.githubusercontent.com/Shipwuu/By-Me/main/Find%20Room"))()

end)

-- @@@@@@@@@@@###############

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")

-- Variables
local player = Players.LocalPlayer
local client = player
local screenGui
local teleportFrame
local huntFrame
local huntLabel
local toggleButton

-- Function to create or update GUI for teleport buttons and search bar
local function createTeleportFrame()
    teleportFrame = Instance.new("ScrollingFrame")
    teleportFrame.Size = UDim2.new(0, 150, 0, 180)  -- Adjusted size to fit search bar and buttons
    teleportFrame.Position = UDim2.new(1, -160, 1, 0)  -- Initial hidden position (below screen)
    teleportFrame.BackgroundTransparency = 0.5
    teleportFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    teleportFrame.BorderSizePixel = 2
    teleportFrame.ScrollBarThickness = 6
    teleportFrame.Visible = false
    teleportFrame.Parent = screenGui

    -- Create UIListLayout for buttons
    local uiListLayout = Instance.new("UIListLayout")
    uiListLayout.FillDirection = Enum.FillDirection.Vertical
    uiListLayout.Padding = UDim.new(0, 3)  -- Smaller padding between buttons
    uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    uiListLayout.Parent = teleportFrame

    -- Adjust canvas size
    teleportFrame:GetPropertyChangedSignal("AbsoluteSize"):Connect(function()
        local contentHeight = uiListLayout.AbsoluteContentSize.Y
        teleportFrame.CanvasSize = UDim2.new(0, 0, 0, contentHeight)
    end)

    return teleportFrame
end

local function addButtonToFrame(frame, name, callback)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, -10, 0, 25)  -- Smaller button size
    button.Position = UDim2.new(0, 5, 0, 5)  -- Position with padding
    button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)  -- Slightly lighter color
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Text = name
    button.Font = Enum.Font.SourceSans
    button.TextSize = 12  -- Smaller text size
    button.Parent = frame

    button.MouseButton1Click:Connect(callback)
end

local function addSearchBarToFrame(frame, updateButtonList)
    -- Create search bar frame
    local searchFrame = Instance.new("Frame")
    searchFrame.Size = UDim2.new(1, -10, 0, 30)  -- Small size
    searchFrame.Position = UDim2.new(0, 5, 0, 5)  -- Position with padding
    searchFrame.BackgroundTransparency = 0.5
    searchFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    searchFrame.BorderSizePixel = 2
    searchFrame.Parent = frame

    -- Create search bar
    local searchBar = Instance.new("TextBox")
    searchBar.Size = UDim2.new(1, -20, 1, -10)
    searchBar.Position = UDim2.new(0, 10, 0, 5)
    searchBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    searchBar.TextColor3 = Color3.fromRGB(255, 255, 255)
    searchBar.PlaceholderText = "Search..."
    searchBar.Font = Enum.Font.SourceSans
    searchBar.TextSize = 12
    searchBar.ClearTextOnFocus = false
    searchBar.Parent = searchFrame

    -- Update button list based on search query
    searchBar:GetPropertyChangedSignal("Text"):Connect(function()
        local query = searchBar.Text:lower()
        updateButtonList(query)
    end)
end

-- Function to initialize teleport buttons and search bar
local function initTeleport()
    teleportFrame = createTeleportFrame()

    local function updateButtonList(query)
        -- Clear existing buttons
        for _, child in pairs(teleportFrame:GetChildren()) do
            if child:IsA('TextButton') then
                child:Destroy()
            end
        end

        -- Add Van Button
        addButtonToFrame(teleportFrame, "Van", function()
            local VanSpawn = Workspace:FindFirstChild('House') and Workspace.House:FindFirstChild('VanSpawn')
            local HRoot = (client.Character and (client.Character.PrimaryPart or client.Character:FindFirstChild('HumanoidRootPart')))
            if VanSpawn then
                HRoot.CFrame = VanSpawn.CFrame - Vector3.new(0, 4, 0)
            end
        end)

        -- Add Room Buttons
        local index = 1
        for _, room in pairs(Workspace:FindFirstChild("House") and Workspace.House:FindFirstChild("Rooms"):GetChildren() or {}) do
            local RoomName = room:IsA('Folder') and room:FindFirstChild('RoomName') and room.RoomName.Value
            if RoomName and RoomName:lower():find(query) then
                addButtonToFrame(teleportFrame, RoomName, function()
                    local HRoot = (client.Character and (client.Character.PrimaryPart or client.Character:FindFirstChild('HumanoidRootPart')))

                    local Hitbox = room:IsA('Folder') and room:FindFirstChild('Hitbox')
                    if Hitbox then
                        HRoot.CFrame = Hitbox.CFrame
                    end
                end)
                index = index + 1
            end
        end
    end

    addSearchBarToFrame(teleportFrame, updateButtonList)
    updateButtonList("")  -- Initialize with all buttons visible
end

-- Function to create or update GUI for hunt display
local function createHuntDisplay()
    huntFrame = Instance.new("Frame")
    huntFrame.Size = UDim2.new(1, 0, 0, 30)  -- Full width, same height
    huntFrame.Position = UDim2.new(0, 0, 0, 0)  -- Positioned at the top of the screen
    huntFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    huntFrame.BackgroundTransparency = 0.7  -- More transparency
    huntFrame.BorderSizePixel = 0  -- Removed border
    huntFrame.Visible = false
    huntFrame.Parent = screenGui

    huntLabel = Instance.new("TextLabel")
    huntLabel.Size = UDim2.new(1, 0, 1, 0)
    huntLabel.BackgroundTransparency = 1
    huntLabel.Font = Enum.Font.SourceSans
    huntLabel.TextSize = 18
    huntLabel.TextColor3 = Color3.fromRGB(255, 255, 255)  -- White color for text
    huntLabel.Text = "Hunt"
    huntLabel.TextStrokeTransparency = 0.5
    huntLabel.TextXAlignment = Enum.TextXAlignment.Center
    huntLabel.TextYAlignment = Enum.TextYAlignment.Center
    huntLabel.Parent = huntFrame
end

-- Function to monitor ghost hunting
local function monitorGhostHunting()
    local function updateHuntDisplay(isHunting)
        if isHunting then
            huntFrame.BackgroundColor3 = Color3.fromRGB(255, 0, 0)  -- Red color
        else
            huntFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)  -- Black color
        end
        huntFrame.Visible = isHunting
    end

    RunService.RenderStepped:Connect(function()
        local GhostModel = Workspace:FindFirstChild('GhostModel')
        local Base = GhostModel and GhostModel:FindFirstChild('Base')
        local isHunting = Base and Base.Transparency == 0

        updateHuntDisplay(isHunting)
    end)
end

-- Function to toggle the visibility of the teleport frame with animation
local function toggleTeleportFrame()
    local isVisible = teleportFrame.Visible

    if isVisible then
        local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
        local tween = TweenService:Create(teleportFrame, tweenInfo, {Position = UDim2.new(1, -160, 1, 0)})  -- Slide down (off screen)
        
        tween.Completed:Connect(function()
            teleportFrame.Visible = false
        end)

        tween:Play()
    else
        teleportFrame.Visible = true
        local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
        local tween = TweenService:Create(teleportFrame, tweenInfo, {Position = UDim2.new(1, -160, 1, -180)})  -- Slide up to position

        tween:Play()
    end
end

-- Function to create the toggle button
local function createToggleButton()
    toggleButton = Instance.new("TextButton")
    toggleButton.Size = UDim2.new(0, 50, 0, 30)  -- Size of the toggle button
    toggleButton.Position = UDim2.new(1, -220, 1, -220)  -- Position on the left side of the teleport frame
    toggleButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)  -- Button color
    toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleButton.Text = "Toggle"
    toggleButton.Font = Enum.Font.SourceSans
    toggleButton.TextSize = 12  -- Text size
    toggleButton.Parent = screenGui

    toggleButton.MouseButton1Click:Connect(toggleTeleportFrame)
end

-- Initialize GUI
screenGui = Instance.new("ScreenGui")
screenGui.Name = "MainGui"
screenGui.Parent = player:WaitForChild("PlayerGui")
screenGui.ResetOnSpawn = false  -- Ensure GUI persists across respawns

initTeleport()
createHuntDisplay()
createToggleButton()
monitorGhostHunting()

-- Ensure teleport frame starts hidden
teleportFrame.Position = UDim2.new(1, -160, 1, 0)
teleportFrame.Visible = false


-- end of Ghost Room ################

-- @@@@@@@@@@@@@@@@

-- Services
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

-- Variables
local player = Players.LocalPlayer
local screenGui = Instance.new("ScreenGui")
local evidenceFrame = Instance.new("Frame")
local evidenceListLayout = Instance.new("UIListLayout")
local evidenceLabels = {}
local detectedEvidences = {}

-- Create the GUI elements
screenGui.Name = "EvidenceChecklistGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

evidenceFrame.Size = UDim2.new(0, 150, 0, 200)
evidenceFrame.Position = UDim2.new(0, 10, 1, -210)
evidenceFrame.AnchorPoint = Vector2.new(0, 1)
evidenceFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
evidenceFrame.BackgroundTransparency = 0.7
evidenceFrame.BorderSizePixel = 2
evidenceFrame.Visible = true
evidenceFrame.Parent = screenGui

evidenceListLayout.Padding = UDim.new(0, 5)
evidenceListLayout.FillDirection = Enum.FillDirection.Vertical
evidenceListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
evidenceListLayout.VerticalAlignment = Enum.VerticalAlignment.Top
evidenceListLayout.Parent = evidenceFrame

local evidenceLabel = Instance.new("TextLabel")
evidenceLabel.Size = UDim2.new(1, 0, 0, 30)
evidenceLabel.BackgroundTransparency = 1
evidenceLabel.Font = Enum.Font.SourceSansBold
evidenceLabel.TextSize = 18
evidenceLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
evidenceLabel.Text = "Evidence"
evidenceLabel.TextStrokeTransparency = 0.5
evidenceLabel.TextXAlignment = Enum.TextXAlignment.Center
evidenceLabel.TextYAlignment = Enum.TextYAlignment.Center
evidenceLabel.Parent = evidenceFrame

-- Function to add evidence to the checklist
local function addEvidenceToChecklist(evidence)
    if not detectedEvidences[evidence] then
        detectedEvidences[evidence] = true
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1, 0, 0, 30)
        label.BackgroundTransparency = 1
        label.Font = Enum.Font.SourceSans
        label.TextSize = 18
        label.TextColor3 = Color3.fromRGB(255, 255, 255)
        label.Text = evidence .. " ✔"
        label.TextStrokeTransparency = 0.5
        label.TextXAlignment = Enum.TextXAlignment.Center
        label.TextYAlignment = Enum.TextYAlignment.Center
        label.Parent = evidenceFrame
        table.insert(evidenceLabels, label)
    end
end

-- Evidence detection functions
local function detectEMF(EMF)
    local s = false
    if EMF and s == false then 
        local L = {}
        for I = 1, 5 do table.insert(L, 'L' .. tostring(I)) end
        local t_s = {}
        for I, V in pairs(L) do
            L[I] = EMF:FindFirstChild(V)
            if typeof(L[I]) == 'Instance' then
                local c = L[I].BrickColor ~= BrickColor.new('Smoky grey')
                if c and I == 5 then
                    s = true
                    break
                end

                if not c then 
                    table.insert(t_s, L[I].BrickColor)
                end
            end
        end
        s = (s == true) or (#t_s <= 5 and t_s)
    elseif not EMF and s == false then
        local a = Workspace:FindFirstChild('emfpart5') or Workspace:WaitForChild('emfpart5')
        if a then
            s = true
        end
    end

    if s then
        addEvidenceToChecklist("EMF Level 5")
    end

    return s
end

local function detectSpiritBox(SB)
    local s = false
    if SB and s == false then
        local child = SB:FindFirstChild('Hand') and SB.Hand:GetChildren()
        for _, V in pairs(child) do
            if V.ClassName == 'Sound' and V.Playing == true then
                s = true
                break
            end
        end
    end

    if s then
        addEvidenceToChecklist("Spirit Box")
    end

    return s
end

local function detectWriting(Book)
    local s = false
    if Book and s == false then
        local t = {}
        for I = 1, 2 do table.insert(t, 'Page' .. tostring(I)) end
        for I, V in pairs(t) do
            t[I] = Book:FindFirstChild(V)
            if typeof(t[I]) == 'Instance' then
                local b = t[I]:FindFirstChildOfClass('Decal')
                if b then
                    b:GetPropertyChangedSignal("Transparency"):Connect(function()
                        if b.Transparency == 0 then
                            s = true
                            addEvidenceToChecklist("Writing")
                        end
                    end)
                    if b.Transparency == 0 then
                        s = true
                        addEvidenceToChecklist("Writing")
                    end
                end
            end
        end
    end

    if s then
        addEvidenceToChecklist("Writing")
    end

    return s
end

local function detectFingerprints()
    local s = false
    local rooms = Workspace:FindFirstChild("House") and Workspace.House:FindFirstChild("Rooms")

    if rooms then
        for _, room in pairs(rooms:GetChildren()) do
            local printPart = room:FindFirstChild("PrintPart")
            if printPart and printPart:FindFirstChild("Print") then
                local imageLabel = printPart.Print:FindFirstChild("ImageLabel")
                if imageLabel and imageLabel.Visible then
                    s = true
                    break
                end
            end
            
            local windows = room:FindFirstChild("Windows")
            if windows then
                for _, window in pairs(windows:GetChildren()) do
                    local printPart = window:FindFirstChild("PrintPart")
                    if printPart and printPart:FindFirstChild("Print") then
                        local imageLabel = printPart.Print:FindFirstChild("ImageLabel")
                        if imageLabel and imageLabel.Visible then
                            s = true
                            break
                        end
                    end
                end
            end
        end
    end

    if s then
        addEvidenceToChecklist("Fingerprints")
    end

    return s
end

local function detectOrbs()
    local s = false
    if s == false then
        local a = Workspace:FindFirstChild('Orb') or Workspace:WaitForChild('Orb')
        if a then
            s = true
        end
        wait(.5)
    end

    if s then
        addEvidenceToChecklist("Orbs")
    end

    return s
end

local function detectFreezingTemps(TM)
    local s = false
    if TM and s == false then
        local a = TM:FindFirstChild('Temp') and (TM.Temp:FindFirstChild('SurfaceGui') and TM.Temp.SurfaceGui.Frame.TextLabel.Text)
        local b = tonumber(a:match('%d+'))
        local c = (b <= 0)
        if c then
            s = true
        end
    elseif not TM and s == false then
        -- Cold breath
    end

    if s then
        addEvidenceToChecklist("Freezing Temps")
    end

    return s
end

-- Detecting evidence parts
local function detectEvidenceParts()
    local evidenceParts = {
        ["emfpart5"] = detectEMF,
        ["Book"] = detectWriting,
        ["Spirit Box"] = detectSpiritBox,
        ["Thermometer"] = detectFreezingTemps,
        ["Orb"] = detectOrbs,
        ["GhostRoom"] = detectFingerprints
    }

    for partName, detectFunc in pairs(evidenceParts) do
        detectFunc(Workspace:FindFirstChild(partName))
    end
end

-- Monitoring the appearance of evidence parts
Workspace.ChildAdded:Connect(function(child)
    local evidenceParts = {
        ["emfpart5"] = detectEMF,
        ["Book"] = detectWriting,
        ["Spirit Box"] = detectSpiritBox,
        ["Thermometer"] = detectFreezingTemps,
        ["Orb"] = detectOrbs,
        ["GhostRoom"] = detectFingerprints
    }

    if evidenceParts[child.Name] then
        evidenceParts[child.Name](child)
    end
end)

-- Detect initial evidence parts
detectEvidenceParts()

-- @@@@@@@@@@@@@@@@

print("Gui 2 🔵") 
